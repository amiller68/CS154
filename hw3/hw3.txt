1) 
long funcQ(long x, long y){
	return (3 * y) + x;
}

long funcP(long r, long s, long t){
	if(!s) goto foo;
	goto bar; 
foo:
	return t + funcQ(s, r);
bar:
	return r + funcQ(t, s);
}


 
2 _loop:
3 xorq %rax, %rax
4 movq $3, %rdx
5 foo:
6 movq %rax, %rcx
7 movq %rdx, %rax
8 andq %rdi, %rax
9 orq %rcx, %rax
10 shlq %rsi, %rdx
11 testq %rdx, %rdx
12 jne foo
13 ret
The assembly code was generated by compiling C code with the following overall form:


//rdi  = x
//rsi  = n
//rax  = result, = 0 at beginning
rcx = mask
0 -> mask

long loop(long x, long n) {
	long result = 0;
	long mask;
	for (mask = ___2___; mask ___3___; mask = ___4___) {
		result ___5___;
	}
	return result;
}

